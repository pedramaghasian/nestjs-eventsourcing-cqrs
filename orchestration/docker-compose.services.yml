version: "3.8"

services:

  #1.gateway.service
  gateway:
      container_name: gateway.service
      build:
        context: ../gateway
        dockerfile: ./Dockerfile
      volumes:
        - ../gateway:/usr/src/app
      ports:
        - 3000:3000
      command: npm run start:dev
  
  #2.product.service
  product.service:
      container_name: product.service
      build:
        context: ../product-service
        dockerfile: ./Dockerfile
      volumes:
        - ../product-service:/usr/src/app
      command: npm run start:dev
  
  #3.rabbitmq.service
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - logMQ:/var/lib/rabbitmq/
      - logMQ2:/var/log/rabbitmq/
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 5672:5672
      - 15672:15672

  #4.eventstoredb.service
  eventstoredb:
    image: eventstore/eventstore
    container_name: eventstoredb
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - type: volume
        source: eventstore-volume-data
        target: /var/lib/eventstore
      - type: volume
        source: eventstore-volume-logs
        target: /var/log/eventstore

  #5.mongodb.service
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=product
    volumes:
      - mongodb:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped


volumes:
  logMQ:
  logMQ2:
  eventstore-volume-data:
  eventstore-volume-logs:
  mongodb:
